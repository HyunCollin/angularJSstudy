$q 서비스를 이용한 비동기 처리

자바스크립트 비동기 프로그래밍
다른 페이지로 이동하거나 서버로부터 데이터를 조회하는 XMLHttpRequest 요청들 
그리고 버튼 클릭과 같은 사용자 액션은 언제 시작하고 끝날지 모른다.
 그래서 한없이 기다릴 수가 없으므로 액션에 대한 처리나 Ajax 요청에 대한 처리는 다른 코드 구문을
 해석하고 실행하다 나중에 실제 사용자가 클릭 이벤트나 응답 이벤트가 왔을 때 콜백 처리를 한다.
 
 예제 코드
 console.log("1");
 $('.button').click(function(){console.log("2"); });
 console.log("3");
 setTimeout(function(){console.log("4");}, 1000);
 console.log("5");
 $.get('getUserList.do',function(result){console.log("6");});
 
 jQuery CommonJS Promises/A spec
 
 jQuery 1.4
 $.ajax({
 	success : function(){....},
 	failure : function(){....}
 	});
 	
 jQuery 1.5 이후
 var promise = $.ajax();
 promise.done(function(){...});
 promise.fail(function(){...});
 promise.alwats(function(){...});

------------------------------------------------------------------------------------

$q 서비스

Promise 객체 - step01.html

promise.then(성공 콜백 함수, 실패 콜백 함수, 경과 콜백 함수)

promise.catch(실패 콜백 함수)

promise.finally(콜백 함수)

angularJS에서는 $http, $timeout, $resource, $route 등 여러 서비스에서 rpomise객체를 반환한다.

 
Deferred 객체 - step02.html
약속을 만들고 이 약속의 상태를 변경한다.

AngularJS에서는 $q.defer()를 이용해 deferred 객체를 생성할 수 있다.
deferred객체의 생성은 곧 promise의 생성이기도 하다.
resolve, reject, notify를 통하여 약속을 지키거나 거절/취소하거나 진행상태를 알려주게 된다.

deferred.resolve(값)
- 만든 약속을 지킨다.
 즉, deferred.promise에 then 메서드에 주어질 성공 콜백 함수에 주어진 값을 전달하여 호출한다.
 
deferred.reject(값)
- 만든 약속을 거절/취소한다.
 즉, deferred.promise에 then 메서드에 주어질 실패 콜백 함수에 주어진 값을 전달하여 호출한다.
 
 deferred.notify(값)
 - 만든 약속에 경과를 알려준다.
 즉, deferred.promise에 then 메서드에 주어질 경과 콜백 함수에 값을 전달하여 호출한다.
 
 deferred.promise
 - 만들어진 약속 객체이다.
 
 ------------------------------------------------------------------------------------
 
 Promise 병렬 제어 - step03.html
$q 서비스는 여러 약속을 하나의 약속으로 처리할 수 있는 API도 제공한다.
예를 들어, 서버에 두 번 요청하는데 두 요청이 동시에 이뤄지면서 모두 성공했을 때 하나의 성공 콜백으로 처리되는
경우를 $q.all(약속들) 메서드를 이용해 약속을 반환하는 여러 비동기적인 일이 병렬적으로 행해지고 
그 약속을 하나로 묶어 성공/실패 처리할 수 있게 해준다.

------------------------------------------------------------------------------------
$http 서비스 인터셉터 등록 시 promise 활용 - step04.html
$httpProivder에서 $httpProvider를 이용하면 http 요청을 보내기 전에 특정 행위를 하는 인터셉터를 
등록할 수 있다.이 인터셉터들은 promise 객체를 반환해 해당 약속이 지켜지고 나면 $http 서비스는 
Http 요청을 하게 된다.

------------------------------------------------------------------------------------

라우팅 처리시 promise 제어 - step05.html
특정 약속이 지켜지면 라우팅 처리를 해야 하거나 하는 경우에 사용할 수 있다.
$route 또한 라우팅 처리 시 promise 객체에 의하여 라우팅 처리를 할 수 있다.



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 